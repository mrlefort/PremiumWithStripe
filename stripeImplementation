/**
 * Created by mrlef on 5/11/2017.
 */


var stripe = require("stripe")("secretKeyHere");
var User = require('./Entities/User.js'); // Requires


function _createStripeCustomer(userEmail, callback) {
    //check if user already has a stripe CustomerId
    var customer = stripe.customers.create({
        email: userEmail,
    }, function (err, customer) {
        // asynchronously called
        if (err) {
            console.log("Something went wrong with creating CustomerId")
            callback(false)
        } else {
            callback(customer)
        }
    })
}

function _deleteStripeCustomer(customerId, callback) {
    stripe.customers.del(
        customerId,
        function(err, confirmation) {
            // asynchronously called
            if(err) {
                console.log("Deletion of stripeCustomer failed: " + err)
                callback(false)
            } else {
                console.log(confirmation)
                callback(true)
            }
        })
}

function _subscribeCustomerToPlan(userStripeId, callback) {
    console.log("subscribeCustomerToPlan is running with userStripeId: " + userStripeId)
    var subscription = stripe.subscriptions.create({
        customer: userStripeId,
        plan: "premiumPlanRetreat",
    }, function(err, subscription) {
        // asynchronously called
        if(err){
            if (err == "Error: This customer has no attached payment source" ){
                callback("noCard")
            } else  {
                console.log("error i _subscribeCustomerToPlan: " + err)
                callback(false)
            }

        } else {
            callback(true)
        }
    });
}

function _unsubscribeFromPremium(userId, callback) {
    User.getUserById(userId, function (user) {
        if (user){
            stripe.customers.retrieve(
                user.stripeCustomerId,
                function(err, customer) {
                    // asynchronously called
                    if (err){
                        callback(false)
                    } else {
                        if (customer.subscriptions.data.id != null) {
                            stripe.subscriptions.del(customer.subscriptions.data.id,
                                { at_period_end: true },
                                function(err, confirmation) {
                                    // asynchronously called
                                    if (err){
                                        console.log("Error: failure in cancelling subscription for userId: " + userId +
                                        " customerStripeId: " + user.stripeCustomerId)
                                        callback(false)
                                    } else {
                                        callback(true)
                                    }
                                }
                            )
                        } else {
                            console.log("Customer does not have a Premium Plan.")
                            callback(false)
                        }
                    }
                }
            )
        }
    })
}


function _addCardToCustomer(customerId, token, callback) {
    stripe.customers.update(customerId, {
        description: "Premium Customer",
        source: token
    }, function(err, customer) {
        // asynchronously called
        if (err){
            callback(false)
        } else {
            callback(true)
        }
    })
}

module.exports = {
    createStripeCustomer: _createStripeCustomer,
    subscribeCustomerToPlan: _subscribeCustomerToPlan,
    deleteStripeCustomer: _deleteStripeCustomer,
    unsubscribeFromPremium: _unsubscribeFromPremium,
    addCardToCustomer: _addCardToCustomer
};
